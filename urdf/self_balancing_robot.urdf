<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot
  name="self_balancing_robot">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="1.884E-08 1.1315E-08 0.081069"
        rpy="0 0 0" />
      <mass
        value="1" />
      <inertia
        ixx="0.00055204"
        ixy="-5.6477E-10"
        ixz="2.325E-09"
        iyy="0.00016933"
        iyz="1.2853E-11"
        izz="0.00063329" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://self_balancing_robot/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.75294 0.75294 0.75294 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://self_balancing_robot/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="rightwheel_Link">
    <inertial>
      <origin
        xyz="7.6231E-11 1.6816E-11 0.013884"
        rpy="0 0 0" />
      <mass
        value="0.059279" />
      <inertia
        ixx="2.391E-05"
        ixy="-6.5624E-14"
        ixz="-1.3532E-14"
        iyy="2.391E-05"
        iyz="-1.6947E-14"
        izz="4.0764E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://self_balancing_robot/meshes/rightwheel_Link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.10196 0.10196 0.10196 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://self_balancing_robot/meshes/rightwheel_Link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="rightwheel"
    type="continuous">
    <origin
      xyz="0 -0.131 -0.0155"
      rpy="-1.5708 0 0" />
    <parent
      link="base_link" />
    <child
      link="rightwheel_Link" />
    <axis
      xyz="0 0 -1" />
  </joint>
  <link
    name="leftwheel_Link">
    <inertial>
      <origin
        xyz="-2.0107E-11 -7.543E-11 0.013884"
        rpy="0 0 0" />
      <mass
        value="0.059279" />
      <inertia
        ixx="2.391E-05"
        ixy="5.1771E-11"
        ixz="-8.8299E-15"
        iyy="2.391E-05"
        iyz="1.9808E-14"
        izz="4.0764E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://self_balancing_robot/meshes/leftwheel_Link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.10196 0.10196 0.10196 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://self_balancing_robot/meshes/leftwheel_Link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="leftwheel"
    type="continuous">
    <origin
      xyz="0 0.131 -0.0155"
      rpy="1.5708 0 0" />
    <parent
      link="base_link" />
    <child
      link="leftwheel_Link" />
    <axis
      xyz="0 0 1" />
  </joint>
  <gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
    <updateRate>400</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>leftwheel</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>rightwheel</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.2580</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.03410</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>50</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>20</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_link</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>
<gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>base_link</bodyName>
      <topicName>imu/data</topicName>
      <gaussianNoise>0.0002</gaussianNoise>
      <gravity>true</gravity>
      <updateRate>400</updateRate>
    </plugin>
  </gazebo>
</robot>
